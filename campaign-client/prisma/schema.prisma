// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String     @unique
  walletAddress       String     @unique
  hashedPassword      String
  signedSignupMessage String
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  campaignsCreated    Campaign[] @relation("Created")
  campaignsVoted      Votes[]
  Account             Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Campaign {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  creator            User     @relation("Created", fields: [creatorId], references: [id])
  creatorId          String   @db.ObjectId
  contractCampaignId String
  startTime          DateTime
  endTime            DateTime
  topic              String
  options            String[]
  votes              Votes[]
}

model Votes {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId String   @db.ObjectId
  option     String
  voter      User     @relation(fields: [voterId], references: [id])
  voterId    String   @db.ObjectId
}
